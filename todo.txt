Adam

	re-up bank account - write check

	bugs 
		friends only ideas showing
		private ideas (show lock in title and hide share buttons from all but creator)
		friends only ideas (show star in title)

DONE:
Added eager loading
Added Rails panel (chrome extension)
Made it so an instance is created for a one time only event - this makes it possible to make on going events one time only and vise versa.

Made it so delayed job or a daemon that runs the rake task every 3 min, or just a delayed job restart method - on branch "solving pushes"

APP:

	make comments asynconous 
	add 'in-mate this person'

	friending asynchronous

	create a user from mobile

	new friend name and image should be link

	remove relationships with themselves

	your friend just joined hoos.in and you are now in-mates! (email or push)

	Adding FB to a native login doesn't work smoothly (either fix or remove)

	add iphone and android market place icons to bulletin board banners

	recent activity on show

--------------------------------------------------------------
	
NOTIFIERS:
	add stats to digest
	
	personalize emails / invitations

	cancel message - out notification/message

	in invite email display next time if exists

	facepile on email

--------------------------------------------------------------

TEACHING USERS:
	you have no .invites -- search for friends to join their fun ideas and become .in-mates click new idea to create a fun idea for friends to do

	put up tips for ideas - how to make a great idea - go beyond boring

	next time at the top of the show

	drawn arrows

	.information
	so-n-so tagged you in an idea
	so-n-so updated the time on idea
	so-n-so commented on an idea
	so-n-so starred you
	so-n-so created an idea

--------------------------------------------------------------

NICE BUT NOT NEEDED

	star instead of lock for private ideas

	RSVPing improvments
		add ideas mini_events to calendar on rsvp_check to idea
		add pic to facepile when rsvping (rsvp_check)

	add footer to event#show and profile and login/signup pages

	go invisible, make invisible, friends only, normal

	sort another person's friends by if they are inmates with current user

	asks for city after signup if no match.

	cancellation message

	grey line on right side of logo in email

	change background button in profile

	refresh button

	add mute button in chat

	switch emails going out of the team@hoos.in email address, make support@hoos.in

	default background images

	recover outs

	facebook app invite

	hovering putting a box around idea shields

	add shortener - https://github.com/jpmcgrath/shortener

	add <span>&#9733;</span> (star html symbol to title)

	add change background picture from profile

	add mute button to rsvp to avoid chatter

	Rsvp - checked_in? boolean with mobile api to check in.


PAYMENTS
------------------------------------------------------------

Users have_one Account
Accounts 
	URI
	has_many Bank_Accounts
		URI
		address
	has_many Credit_cards
		URI
		expiration
		last 4


MARKETPLACE PAYMENTS TO DO

type:person/bussiness with dynamic fields
fix saving phone number w phony
disable flaking out if you pay? fees for flaking out
cost of refund? 50% :o)
put hold upon rsvp and capture payment at event start time
display merchant fees to the venues when signing up => 30c
	1% + 30c fee per rsvp
verify our account in chase
rescue from Balanced in payments controller if requires more info
pass in name for card
put the balanced key into a yml file and read it in dev. gitignore that yml file
already created a card, has card_uri but
@account = Balanced::Card.find(params[:uri]).account = nil???
If a card is expired request new card
User has_many CreditCards
delete user deletes credit cards and bank account with balanced
no account on the debit, and no description -- should be hoos.in - event.date event.title
add qr tag to reciept create a qr code per rsvp\

        if @event.require_payment? && current_user.credit_card_uri.nil?
          redirect_to confirm_payment_path(@event)
        elsif @event.require_payment? && !current_user.credit_card_uri.nil?
          current_user.debit!(@event.price)
          current_user.rsvp!(@event)
        else
          current_user.rsvp!(@event)       
        end

	second payment
		user tries to rsvp again
		if saved for later
			retrieve account by email
			debit account to merchant
		else 
			ask for card again
			find account by card_uri
			debit account to merchant
		end

	refund
		merchant recieves complain
		merchant wants to initiate a refund

		hoosin recieve a complaint to support@hoos.in
		hoosin contacts merchant with complaint
		if merchant won't refund
		charge the merchant back 
		warn both parties that the funds are under investigation for 60 days
		we do an investigation 
		give the money to whomever we think is more ligit


